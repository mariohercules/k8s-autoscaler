apiVersion: v1
kind: Service
metadata:
  name: kube-znn
  labels:
    app: kube-znn
spec:
  ports:
    - name: http
      port: 80
    - name: http-metrics
      port: 9180
  selector:
    app: kube-znn
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-znn-v1
  labels:
    app: kube-znn
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-znn
      version: v1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kube-znn
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9180"
        # sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: kubeznn
      containers:
      - name: znn
        image: cmendes/znn:high
        imagePullPolicy: IfNotPresent
        env:
        - name: DB_HOST
          value: "kube-znn-db"
        - name: DB_PORT
          value: "3306"
        - name: DB_NAME
          value: "znn_data"
        - name: DB_USER
          value: "root"
        - name: SLEEP_TIME
          value: "0"
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password
        readinessProbe:
          exec:
            command:
            - curl
            - -f
            - http://localhost/news.php
          initialDelaySeconds: 1
          periodSeconds: 2
          failureThreshold: 5
        livenessProbe:
          exec:
            command:
            - curl
            - -f
            - http://localhost/liveness.php
          initialDelaySeconds: 1
          periodSeconds: 1
          failureThreshold: 5
        ports:
        - containerPort: 80
        - containerPort: 9180
      # nodeSelector:
      #   kops.k8s.io/instancegroup: web