################################################################################
# Purpose:  Common configuration file for the Rainbow infrastructure.
#           Properties are loaded by class org.sa.rainbow.Rainbow .
# Target:   ZNews case study system with Probes, Gauges, and Effectors implemented
#           (rainbow.target = znn)
# Framework-defined special properties:
#     rainbow.path - the canonical path to the target configuration location
#
################################################################################

###
# Default values for location specific properties, meaning that, if the
# rainbow-<host>.properties file does not specify a value, the default value
# set here is used.
###

### Rainbow component customization
## Rainbow host info and communication infrastructure
#- Location information of the master and this deployment
rainbow.master.location.host = 127.0.0.1
#- Location information of the deployed delegate
rainbow.deployment.location = 127.0.0.1
#- default registry port; change if port-tunneling
rainbow.master.location.port = 1111
#- OS platform, supported modes are:  cygwin | linux
#  Use "cygwin" for Windows, "linux" for MacOSX
rainbow.deployment.environment = linux
#- Event infrastructure, type of event middleware: rmi | jms | que | eseb
rainbow.event.service = eseb
#eBus Relay

rainbow.delegate.beaconperiod = 10000
rainbow.deployment.factory.class = org.sa.rainbow.ports.StandaloneRainbowConnectionFactory

### Rainbow models
rainbow.model.number=2

# Rainbow Acme model of kube-znn
rainbow.model.path_0=model/KubeZnnSystem.acme
rainbow.model.load.class_0=org.sa.rainbow.model.acme.commands.KubeCommandFactory
rainbow.model.name_0=KubeZnnSystem
rainbow.model.saveOnClose_0=true
rainbow.model.saveLocation_0=model/KubeZnnSystem-post.acme

# Rainbow utility model - keeps current utility along desired utility dimensions
# specified in stitch/utilities.yml
rainbow.model.path_1=stitch/utilities.yml
rainbow.model.load.class_1=org.sa.rainbow.model.utility.UtilityCommandFactory
rainbow.model.name_1=KubeZnnSystem

# Rainbow utility history model - keeps utility history
rainbow.model.load.class_2=org.sa.rainbow.model.utility.UtilityHistoryCommandFactory
rainbow.model.name_2=KubeZnnSystem
rainbow.model.saveOnClose_2=true
rainbow.model.saveLocation_2=model/uh.csv

### Rainbow analyses
rainbow.analyses.size = 1
# Checks architecture for architectural errors
rainbow.analyses_0=org.sa.rainbow.evaluator.acme.ArchEvaluator
# Calculates utility of the system after each change to the arch model
rainbow.analyses_1=org.sa.rainbow.evaluator.utility.UtilityEvaluator

#Rainbow adaptation & stitch components
rainbow.adaptation.manager.size=1
rainbow.adaptation.manager.class_0=org.sa.rainbow.adaptation.AdaptationManager
rainbow.adaptation.manager.model_0=KubeZnnSystem:Acme

rainbow.adaptation.executor.size=1
rainbow.adaptation.executor.class_0=org.sa.rainbow.stitch.adaptation.StitchExecutor
rainbow.adaptation.executor.model_0=KubeZnnSystem:Acme

rainbow.effector.manager.size=1
rainbow.effector.manager.class_0=org.sa.rainbow.translator.KubeEffectorManager
rainbow.effector.manager.model_0=KubeZnnSystem:Acme

customize.model.evaluate.period = 2000
## Translator customization
#- Gauge spec
customize.gauges.path = model/gauges.yml
#- Probe spec
customize.probes.path = system/probes.yml
customize.probes.k8suser=admin-user
#- Operator spec as mapping to effector
customize.archop.map.path = model/op.map
#- RollOutEffector spec
customize.effectors.path = system/effectors.yml
## Adaptation Manager
#- Directory of Stitch adaptation script
customize.utility.enabled = false
customize.scripts.path = stitch
#- Utilities description file, Strategy evaluation config, and minimum score threshold
customize.utility.path = stitch/utilities.yml
customize.utility.trackStrategy = uSF
customize.utility.score.minimum.threshold = 0.33
customize.utility.scenario = scenario 1


customize.prometheus.url=http://localhost:9090
customize.adaptation.cycletime=30000
